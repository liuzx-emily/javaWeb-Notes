
在myEclipse中给项目改名，两个步骤：
	1 选中项目，F2改名
	2 选中项目 右键properties - myEclipse - web中改名




1 【jsp】
	页面中固定不变的头、尾
		0 每个页面都写，一旦有改动想要go die
		1 前端：js中生成，放在public.js中。（展示性的内容不推荐这样用，因为禁用js就显示不出来了）
		2 后端：头、尾用include引进来。（必须在IE8下测试，因为正常浏览器可以自动纠错，）

4 【String】
	1 用StringBuilder，快
	2 int转String：i+""

5 【数组】复制数组
	System类中的静态方法：arraycopy 
	static void arraycopy(Object src,int srcPos,Object dest,int destPos,int length) 
	将源数组的部分元素复制到目标数组的指定位置
		int[] src = new int[]{1,2,3,4,5};
		int[] dest = new int[]{6,7,8,9,10};
		System.arraycopy(src,0,dest,0,3); 	//dest:[1,2,3,9,10]



---------------------解决get请求的乱码----------------------
tomcat的配置文件server.xml中，添加URIEncoding ：
<Connector 
	port="8080"
	protocol="HTTP/1.1"
	connectionTimeout="20000"
	redirectPort="8443"
	URIEncoding="UTF-8"/>



---------------------sql中的if else----------------------
    <!-- 状态state不搜所有，只搜索1、2 -->
    <choose>
        <when test="state != null and state != ''">
            AND v.state = #{state}
        </when>
        <otherwise>
            AND ( v.state ='1' or v.state ='2')
        </otherwise>
    </choose>


--------------------日期 datetime比较--------------------
 前台传的格式：
	birthday_start:"1989-05-26",
	birthday_end:"1989-05-26"
 数据库中是datetime

	<!-- 【日期】生日 开始-->
	<if test="birthday_start != null and birthday_start != ''">		    
		AND a.birthday &gt;= CONCAT(#{birthday_start}," 00:00:00")
    </if>

    <!-- 【日期】生日 结束-->
    <if test="birthday_end != null and birthday_end != ''">		    
	 	 AND a.birthday &lt;= CONCAT(#{birthday_end}," 23:59:59")
    </if>


--------------------SQL中 判断是否为null--------------------
	判断值是否为null：
		用a is null，不能用a=null
		用a is not null，不能用  a!=null


--------------------SQL中 条件写在on和where的区别--------------------
1 	下面两句的结果是不一样的：
	select * from t_a left join t_b on t_a.id=t_b.aid and t_b.name='小明'
	select * from t_a left join t_b on t_a.id=t_b.aid where t_b.name='小明'
	说明：条件t_b.name='小明'
		写在on中的话：先对t_b表筛选，之后再和t_a连接
		写在where中：是先把t_b和t_a连接，对连接后的结果集再删选
	举例：如果对于t_a中的数据a，在t_b中没有对应的数据。
			用on的话，数据a还在（连接的t_b的字段都是null）
			用where的话，数据a就不在了。因为连接之后的结果集中的t_b.name是null，不满足条件t_b.name='小明'

2 left join和right join因为有主表、从表的区别，所以条件写在on和where里是不同的。
  但是inner join中没有主表、从表的概念，条件写在on里和where里没有区别




--------------------sql concat--------------------
1 concat
	1、功能：
		将多个字符串连接成一个字符串。
	2、语法：
		concat(str1, str2,...)
		返回结果为连接参数产生的字符串，如果有任何一个参数为null，则返回值为null。
	3、举例：
		select concat (id, name, score) as info from tt2;
		select concat (id, "-",name, "-",score) as info from tt2;

2 concat_ws
	1、功能：
		和concat()一样。但是可以指定分隔符(concat with separator)
	2、语法：
		concat_ws(separator, str1, str2, ...)
		说明：第一个参数指定分隔符。需要注意的是分隔符不能为null，如果为null，则返回结果为null。
	3、举例：
		select concat_ws("-",id,name) as info from tt2;

3 group_concat
	1、功能：
		将group by产生的同一个分组中的值连接起来，返回一个字符串结果
	2、语法：
		group_concat( [distinct] 要连接的字段 [order by 排序字段 asc/desc  ] [separator '分隔符'] )
		说明：通过使用distinct可以排除重复值；如果希望对结果中的值进行排序，可以使用order by子句；separator是一个字符串值，缺省为一个逗号。
	3、举例：
		select GROUP_CONCAT(t_temp.result) from(
			select concat("名称：",v.AssetName,"  类型：",v.AssetTypeName) as "result" from v_assectquery v WHERE v.AssetId in(
				select t_h.HostAssetId from t_itss_asset_belongto_host t_h where t_h.assetid ='FCC68EA9B2744BB8AAD227DA45EAD538'		
			)
		) as t_temp


--------------------esint表格分页--------------------
 【 ~~~~~~~~~~~~~ html ~~~~~~~~~~~~~ 】
		<table id="cabinetList_table" class="dataTable">
	        <thead>
	            <tr>
	            	<th datacol="CabinetId" class="noshow" cls="noshow"></th>
	                <th datacol="CabinetName" sortcol="CabinetName" cls="text-center">机柜的名称/编号</th>
	                <th datacol="ServerRoomName" sortcol="ServerRoomName" cls="text-center">所属机房名称</th>
	                <th datacol="UCount" sortcol="UCount" cls="text-center">U数</th>
	                <th datacol="oper" cls="text-center">操作</th>
	            </tr>
	        </thead>
	        <tbody></tbody>
	    </table>

	    <div class="paging" id="cabinetList_page"></div>
 
 【 ~~~~~~~~~~~~~ js ~~~~~~~~~~~~~ 】
		$(function() {
		    // 分页控件初始化
		    $('#cabinetList_page').initPaging({ pageSize: 20, pgindex: 1 }, loadCabinetTable, [5, 10, 20]);
		    // 表格绑定列头排序
		    $("#cabinetList_table").bindTableSortFn(loadCabinetTable);
		    // 表格初始化
		    loadCabinetTable();
		});
		function loadCabinetTableSearch(){			
        	$('#cabinetList_page').setPaging({ pgindex: 1 });
			loadCabinetTable();
		}
		function loadCabinetTable() {
			// 校验d
			if (!$('#advancedSearch').ClientValid()) {
			    return;
			}
    		var param = $("#advancedSearch").getPostData();
		    // 取表格的分页、排序参数
		    var pgindex = $("#cabinetList_page").getPaging().pgindex;
		    var pgSize = $("#cabinetList_page").getPaging().pgSize;
		    var sortcol = $("#cabinetList_table").getSortCol();
		    param.limitStart = (pgindex - 1) * pgSize;
		    param.row = pgSize;
		    param.sortcol = sortcol;
		    console.log(param);
		    var fnSuccess = function(res) {
		        var data = res.data;
		        if (data.length > 0) {
		            for (var i = 0; i < data.length; i++) {
		                var cuda = data[i];
		                cuda.oper = "<img class='lookup-host-icon' style='cursor:pointer;' onclick='editById(\"" + cuda.CabinetId + "\")' src='" + basePath + "itss/img/icon-change.png'>"
		            }
		            $("#cabinetList_table").databind(data);
		            $("#cabinetList_page").setPaging({ count: parseInt(res.total) });
		        } else {
		            $("#cabinetList_table").databind([]);
		            $("#cabinetList_page").setPaging({ count: 0 });
		        }
		        // 切换是否启用
		        userEvent();
		    }
		    $.rajax(basePath + 'Cat/queryCatList.do', param, fnSuccess,true);
		}

 【 ~~~~~~~~~~~~~ controller ~~~~~~~~~~~~~ 】
		@RequestMapping(value = "/queryCatList.do", method = RequestMethod.POST)
		@ResponseBody
		public Map<String, Object> queryCatList(@RequestBody Map<String, Object> params)
				throws Exception {
			return CatService.queryCatList(params);
		}

 【 ~~~~~~~~~~~~~ service ~~~~~~~~~~~~~ 】 	
 	Map<String, Object> queryCatList(Map<String, Object> params) throws Exception ;

 【 ~~~~~~~~~~~~~ serviceImpl ~~~~~~~~~~~~~ 】
		public Map<String, Object> queryCatList(Map<String, Object> params) throws Exception {
			Map<String, Object> result = new HashMap<String, Object>();	
			int rowcount = CatMapper.selectCatCount(params);
			if (rowcount > 0) {
				// 获取分页
				result.put("flag", 1);
				result.put("total", rowcount);
				result.put("data",  CommonUtil.dataNull(CatMapper.selectCat(params)));
			}
			else {
				result.put("flag", 0);
				result.put("total", 0);
				result.put("data", new ArrayList<Map<String, Object>>());
			}
			return result;
		}

 【 ~~~~~~~~~~~~~ mapper.java ~~~~~~~~~~~~~ 】
 	public List<Map<String, Object>> selectCat(Map<String, Object> params) throws Exception;

 【 ~~~~~~~~~~~~~ mapper.xml ~~~~~~~~~~~~~ 】
		<select id="selectCat" resultType="java.util.Map" parameterType="java.util.Map">
			SELECT t_itss_configuration_cabinet.CabinetId,
			t_itss_configuration_cabinet.CabinetId As CabinetId,
			t_itss_configuration_cabinet.CabinetName As CabinetName,
			t_itss_configuration_cabinet.UCount As UCount,
			t_itss_configuration_cabinet.SortNum As SortNum,
			t_itss_configuration_serverroom.ServerRoomName As ServerRoomName
			FROM
			t_itss_configuration_cabinet t_itss_configuration_cabinet
			Left Join
			t_itss_configuration_serverroom t_itss_configuration_serverroom
			ON
			t_itss_configuration_cabinet.ServerRoomId=
			t_itss_configuration_serverroom.ServerRoomId
			<where>
			    t_itss_configuration_cabinet.IsDelete = '0'
				<if test="serverroomname != null and serverroomname != ''">
					AND INSTR(SERVERROOMNAME,#{serverroomname}) &gt; 0
				</if>
				<if test="cabinetname != null and cabinetname != ''">
					AND INSTR(CABINETNAME,#{cabinetname}) &gt; 0
				</if>
			</where>
			<if test="sortcol != null and sort_name != ''">
				order by ${sortcol}
			</if>
			<if test="limitStart != null and row != null and row != ''">
				limit ${limitStart},${row}
			</if>
		</select>

 【 ~~~~~~~~~~~~~ 操作js ~~~~~~~~~~~~~ 】
	获取选中行的id：
		$("#cabinetList_table").getSelectedRowValue("CabinetId")



--------------------前台用JSON.stringify()转完后，后台要用--------------------
	$.ajax({
	    url: "http://localhost:8080/modelPro/student/add.do",
	    type: 'POST',
	    contentType: "application/json",    // 前->后
	    data: JSON.stringify(params),		
	    dataType: 'json',   				// 后台回传的数据的类型，小心!!
	    success: function() {},
	    error:function(){}
	});

	如果设定了dataType为json。那么
		后台返回void时会走error，
		后台返回Integer时接到一个真int（而不设定时,返回1则接到"1"）

	ajax参数中如果有数组：
		前端：必须要用JSON.stringify转换。
			dataType: 'json',
			contentType: 'application/json',
			data: JSON.stringify(param)
		后端：controller中必须要用@RequestBody来接

	@RequestMapping(value = "/addArticle.do", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> addArticle(@RequestBody Map<String, Object> params){
		return articleService.addArticle(params);
	}



----------------------------------------
	mysql中的部分函数，参数和逗号分隔符中间不能有空格




----------------------解决数据库中不能存中文、中文乱码------------------
从"数据库"——"后端"——"前端"一步步确认
	1 是不是数据库的问题？
		使用navicat或者cmd，尝试向字段A输入中文。如果：
		1 可以正确保存，那么不是数据库的问题
		2 无法正确保存，那么是数据库的问题：
			检查字段A的字符集、所在表的字符集、所在数据库的字符集
			【mysql的教训：
				如果用create table自己建表的话。那么默认情况下，表和表中字段的字符集都是latin，不能保存中文。
				表建好之后，如果修改表的字符集，表中字段的字符集不会跟着变，要一个个改。
				所以最好建库建表时，都指定字符集。
				CREATE TABLE `module_email` (
				  `id` varchar(32)  NOT NULL,
				) DEFAULT CHARSET=utf8;
			 （好像是）oracle和sqlserver都只需要在建库的时候设置字符集，建好后不允许修改
			】

	2 是不是后台连接数据库的问题？
		jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8

	3 是不是前台连接后台的问题？
		这个简单，略了
	

----------------------时间格式化------------------	
    String currentTime = new SimpleDateFormat("yyyy-MM-d HH-mm-ss").format(new Date());


    Date.prototype.Format = function (fmt) { //author: meizz 
        var o = {
            "M+": this.getMonth() + 1, //月份 
            "d+": this.getDate(), //日 
            "h+": this.getHours(), //小时 
            "m+": this.getMinutes(), //分 
            "s+": this.getSeconds(), //秒 
            "q+": Math.floor((this.getMonth() + 3) / 3), //季度 
            "S": this.getMilliseconds() //毫秒 
        };
        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var k in o)
        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        return fmt;
    }
    调用： 

    var time1 = new Date().Format("yyyy-MM-dd");
    var time2 = new Date().Format("yyyy-MM-dd hh:mm:ss");



-----------------部署时，修改tomcat的端口号-----------------
	conf/server.xml中需要改3个地方：
		<Server port="改8005" shutdown="SHUTDOWN">
		<Connector port="改8009" protocol="AJP/1.3" redirectPort="改8443"/>
		<Connector connectionTimeout="20000" port="改8080" protocol="HTTP/1.1" redirectPort="改8443"/>



-----------------修改title-----------------：
	$("title").html("天津市公安局妇女联合会-"+data.webColumn.columnname);



-----------------新增、编辑页面，成功之后-----------------

	layer.msg('提交成功！', {
	    time: 0,
	    btn: ['返回'],
    	shade:0.3,
	    yes: function(index) {
	        window.location.href="跳转到列表页";
	    }
	});