【xml大概知道就行】

-----------------XML简介-----------------
1 eXtensible Markup Language：可扩展标记型语言
	标记型：跟html一样，用"标签"
	可扩展：html标签是固定的。xml的标签可以自己定义，可以写中文标签：<狗></狗>

2 用途：存储数据，最常用作配置文件
	例子：需要修改数据库的登录名和密码，不用修改源代码，只修改配置文件就可以了

3 xml有两个版本：1.0 1.1
	现在使用的都是1.0版本，因为1.1版本不能向下兼容



-----------------XML语法-----------------
1 xml的后缀名：.xml
  xml的文档声明：<?xml version="1.0" encoding="utf-8"?> 

2 定义标签
	1 一定要闭合：
		有内容：<person>小明</person>
		无内容：<person/>
	2 一个xml文档必须有且仅有1个根标签
	3 标签中的所有空格、换行，都会被当作标签内容来处理。所以，要改变"用换行、缩进来让原文件可读性强"的书写习惯。
	4 标签的命名规则：
		1 区分大小写
		2 不能以数字或下划线开头
		3 不能以xml、Xml、XMl等开头
		4 不能包含空格和冒号
		5 可以是中文

3 定义属性
	html是标记型文档，可以有属性；xml也是标记型文档，可以有属性。
	属性定义要求：
		1 一个标签可以有多个属性，但属性名称不能重名
		2 属性值用引号包起来，单引号、双引号都可以
		3 属性命名规则和标签的命名规则一致

4 注释：<!-- 注释 -->

5 特殊字符
	如果想显示 a<b ，要写成a&lt;b
	& &amp;
	> &lt;
	< &gt;
	" &quot;
	' &apos;

6 CDATA区（了解即可）
	可以解决多个字符都需要转义的操作，把这些内容放到CDATA区中，就不需要转义了。
	CDATA区中的内容都当作文本内容来处理
	写法：	<![CDATA[内容]]>

	PCDATA：parsed character data（会被解析的文本）
	CDATA：character data（不会被解析的文本）



-----------------XML的约束-----------------
dtd约束：
	语法自成一派
	一个xml可以有多个dtd
schema约束：
	符合xml语法
	一个xml可以有多个schema，多个schema使用名称空间来区分
	schema可以支持更多的数据类型


-----------------XML的约束 dtd（看懂就行）-----------------
1 dtd语法 - 定义元素：
	简单元素：没有子元素
		<!ELEMENT 元素名称 (#PCDATA)>
			(#PCDATA)	
			EMPTY		空元素
			ANY			任意

	复杂元素	
		<!ELEMENT 元素名称 (子元素1,子元素2)>
		(子元素1)			只出现一次
		(子元素1+)			>=1次
		(子元素1?)			=0,1次
		(子元素1*)			任意次(0次也可以)
		多个子元素用逗号分隔：按顺序出现
		多个子元素用 |  分隔：只能出现一个

  dtd语法 - 定义属性：
  	<!ATTLIST 元素名 属性名称 属性类型 属性约束>
  	约束：  		
  		值				属性的默认值
  		#REQUIRED		属性值是必需的
  		#IMPLIED		属性不是必需的
  		#FIXED value	属性值是固定的

  dtd语法 - 定义实体：
  		<!ENTITY 实体名称 "实体的值">
  		在xml中使用：&实体名称;

2 注意：
	如果用浏览器打开xml文件，浏览器只负责校验语法，不校验约束
	如果想要检验xml的约束，需要使用工具

3 使用dtd的方式:
	1 引入外部(本地)
		<!DOCTYPE 根元素名称 SYSTEM "dtd文件的路径">
	2 引入内部
		<!DOCTYPE 根元素名称[
			....
		]>
	3 引入网络上的DTD文件
		<!DOCTYPE 根元素名称 PUBLIC "dtd文件名称" "dtd文件路径">


-----------------XML的约束 schema['skimə]-----------------
1 schema概述
	xml schema文件本身就是一个xml文件，但它的扩展名是.xsd
	一个xml中可以有多个schema，多个schema用名称空间来区分
	dtd里面有PCDATA类型，在schema里面支持更多的数据类型
	语法比dtd复杂

2 根节点schema，属性：
	xmlns="http://www.w3.org/2001/XMLSchema" 表示当前文件是一个schema约束文件
	targetNamespace="url地址" 要想使用该约束文件，通过这个url来引用（url地址可以随便编）


-----------------例子：用dtd来约束-----------------

	<?xml version="1.0"?>
	<!DOCTYPE note SYSTEM "http://www.w3schools.com/dtd/note.dtd">
	<note>
	  <to>Tove</to>
	  <from>Jani</from>
	  <heading>Reminder</heading>
	  <body>Don't forget me this weekend!</body>
	</note>

约束：
	<!ELEMENT note (to, from, heading, body)>
	<!ELEMENT to (#PCDATA)>
	<!ELEMENT from (#PCDATA)>
	<!ELEMENT heading (#PCDATA)>
	<!ELEMENT body (#PCDATA)>




-----------------例子：用schema来约束-----------------

	<?xml version="1.0"?>
	<note xmlns="http://www.w3schools.com"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.w3schools.com note.xsd">
	  <to>Tove</to>
	  <from>Jani</from>
	  <heading>Reminder</heading>
	  <body>Don't forget me this weekend!</body>
	</note>

约束：
	<?xml version="1.0"?>
	<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.w3schools.com"
	xmlns="http://www.w3schools.com"
	elementFormDefault="qualified">
		<xs:element name="note">
		  <xs:complexType>
		    <xs:sequence>
		      <xs:element name="to" type="xs:string"/>
		      <xs:element name="from" type="xs:string"/>
		      <xs:element name="heading" type="xs:string"/>
		      <xs:element name="body" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		</xs:element>
	</xs:schema>



-----------------XML的解析-----------------
1 xml是标记型文档
2 xml的解析方式（技术）：dom和sax	
	dom方式：根据xml的层级结构，在内存中分配一个树形结构，把xml的标签、属性、文本都封装成对象
		优：增删改很方便
		缺：如果文件过大，会造成内存溢出
	sax：采用事件驱动，边读边解析
		优：不会造成内存溢出；查询方便
		缺：不能进行增删改操作
3 想要解析xml，首先需要解析器
  不同的公司和组织，针对dom和sax方式，提供了不同的解析器，通过api方式提供
  sun公司：	jaxp
  dom4j组织：dom4j（最常用）


-----------------XML的解析器：jaxp-----------------
1 jaxp是javase的一部分
2 jaxp解析器在jdk的javax.xml.parsers包里面


-----------------XML的解析器：dom4j-----------------
1 dom4j，是一个组织，针对xml解析，提供解析器dom4j
2 dom4j不是javase的一部分，所以需要先下载导入dom4j提供的jar包
3 dom4j支持xpath操作，可以直接获取某个孙元素不用一层层下去找子元素
